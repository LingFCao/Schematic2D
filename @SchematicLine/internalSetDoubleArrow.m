function internalSetDoubleArrow( obj, startPosition, endPosition )
% Line with arrows at each ends ... 
xlim = obj.parent.parent.Axs.XLim;
ylim = obj.parent.parent.Axs.YLim;

MidCoord  = .5 * ( endPosition + startPosition );
Direction = endPosition - startPosition;

defaultLineContainer = obj.rightLine;
xdata = [ MidCoord(1), MidCoord(1) ];
ydata = [ MidCoord(2), MidCoord(2) ];
udata = .5 * [ Direction(1), -Direction(1) ];
vdata = .5 * [ Direction(2), -Direction(2) ];
switch obj.arrowstyle
    case 'patch'
        % determine the length
        dr =  norm( Direction ) + 1E-7;
        width  = obj.headproportion * dr * ones(1, 2);
        height = obj.headproportion * dr * ones(1, 2);
        xpos   = ...
            [ ... 
            startPosition(1) + obj.headproportion * Direction(1), ...
            startPosition(1) + (1 - obj.headproportion ) * Direction(1) ];
        ypos = ...
            [ ...
            startPosition(2) + obj.headproportion * Direction(2), ...
            startPosition(2) + (1 - obj.headproportion ) * Direction(2) ];
        xdir = ...
            [ ...
            -Direction(1) / dr, +Direction(1) / dr ];
        ydir = ...
            [ ...
            -Direction(2) / dr, +Direction(2) / dr ];
        pstr = SchematicCircle.staticSetArrowHead( ...
            xpos, ...
            ypos, ...
            xdir, ...
            ydir, ...
            width, ...
            height);
        if isempty( obj.rightLine )
            obj.rightLine = plot( ...
                obj.parent.parent.Axs, ...
                xpos, ...
                ypos, ...
                'visible', 'off', ...
                'pickableparts', 'none', ...
                obj.CurrentPropertyCell{:});
        else
            set( obj.rightLine, ...
                'xdata', xpos, ...
                'ydata', ypos );
        end
        if isempty( obj.arrowhead )
            obj.arrowhead = patch( ...
                obj.parent.parent.Axs, ...
                'xdata', pstr.x, ...
                'ydata', pstr.y, ...
                'edgealpha', 0, ...
                'visible', 'off', ...
                'pickableparts', 'none', ...
                'facecolor', obj.fillColor );
        else
            set( obj.arrowhead, ...
                'xdata', pstr.x, ...
                'ydata', pstr.y, ...
                'facecolor', obj.fillColor );
        end
    case 'quiver'
        % make sure that 'autoscale' is off by default ... 
        if isempty( defaultLineContainer )
            defaultLineContainer = quiver( ...
                obj.parent.parent.Axs, ...
                xdata, ...
                ydata, ...
                udata, ...
                vdata, ...
                'autoscale', 'off', ...
                'visible',   'off', ...
                'pickableparts', 'none', ...
                obj.CurrentPropertyCell{:} );
            % save the reference to the rightLine property ... 
            obj.rightLine = defaultLineContainer;
        else
            set( defaultLineContainer, 'xdata', xdata, 'ydata', ydata, 'udata', udata, 'vdata', vdata );
        end
end

obj.parent.parent.aaxis( [xlim, ylim] );
